#1) refactor blocks class to use getters
#    a) supports images from multiple directions with getimg( angle)
#    b) supports different ceiling and floor images

#    c) consider either generating on the fly an average floor /ceiling colour or pre loading it - flor colour must be configured manually for now

#1.5) refactor abyss block out, it should be replaced with a generic block stop rendering properties.
#1.6) fix static block handling, would reduce memory usage for many equal blocks

#1.7) fix demo map, need to redo all new blocks to fix errors


2) fix floor lighting

3) fix line in the middle and outside of floors due to texture coords being non integer fix by flooring or by adding +1

4) make floor texture recursive subdivision, to reduce the distortion up close. N divisions based on distance.

5) set max depth for transparent textures, consider a non transparent variant after second or (N) layer?
5.1) fix transparent tiles not rendering rear wall!
5.2) fix corners of transparent blocks not being rendered!

6) fix skybox line in the north east direction

7) fix floors rendering behind abyss blocks, will need to redraw the background img, potentialy do with the floor ceiling too? (sprites)
7.5) reuse the background draw code to allow for textures that are based on screen position not world for weird effects! add it as a property of the blocks class.

10) consolidate config

11) fix GitHub preview not working, or replace with something else to send a link to people

12)refactor other classes to use getters

20) better image loading, not lazy method,
21) game shouldn't crash if an img load fails!

22) generate floor and ceiling colour on the fly if non provided, based on image colour
23) consider generating lower res textures (mipmapping?) from provided texture for far away textures. Improve performance? or just to remove jitter


30) custom ray collision math => allows for complex wall shapes


100) replace solid colour floor draw with an average over a given distance to anti alias long distance draws
    potentialy draw for a max of x pixels before switching to next draw colour?

110) use affine textures for walls
    potentialy only for long distance? obscured by a another object etc

200) redo entire algo sort everything by distance and draw one after the other so sprites dont draw over ceilings

300) add portals!

1'000'000) make it 3d!



